/* class DoWhen
 *
 * Description:
 *     Tests c(ondition) in an interval of p(ause) until m(ax) loops or c(ondition) is true
 *     if c(condition) is true - f(un)n(ction) is called and the interval cleared
 *
 * Licence:
 *     copyleft by Stefan Friedl (k) all rights reversed
 *     Attribution-NonCommercial-ShareAlike 4.0 International
 *     http://creativecommons.org/licenses/by-nc-sa/4.0/
 */

/**
 * Tests c(ondition) in an Interval of p(ause) until m(ax) loops or c(ondition) is true
 *  if c(condition) is true - f(un)n(ction) is called
 * 
 * @constructor
 * @param {function}    fn callback function
 * @param {string}      c  condition to check
 * @param {int}         m  max loops to check c
 * @param {int}         p  interval pause
 */
var DoWhen=function(a,b,c,d){"use strict";var e=this;e.fn=e.fn||a||function(){},e.m=e.m||c||5,e.p=e.p||d||500,e.n=0,e.tFn=e.tFn||new Function("return "+b),e.iFn=function(){var a=e.tFn();a?e.fn():e.n++,(e.n>=e.m||a)&&window.clearInterval(e.i)},e.i=window.setInterval(function(){e.iFn()},d)};